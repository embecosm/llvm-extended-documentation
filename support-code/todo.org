* Overview

These are the issues found by checking all the generic options from GCC and
LLVM.  The script =opt-check.sh= tests them all using native x86
compilers. These must be built from top of tree with shared libraries and
plugins enabled, and _gold_ as the default linker.

** Statistics **

Looking at the =opt-check.sh= script as of 2 February 2016, we observe:
- 397 options for both LLVM and GCC
- 433 options just for LLVM
- 598 options just for GCC

* List of things to be done for GCC

** Bugs in documentation of options

*** Overall options

The following option appears in two summaries, the other being in the
pre-processor, although it is only documented here.
-  =-E=

*** C language options

=-traditional= should document that it has to be used with =-E=

The following appears in the summary for C options, but appears to be
obsolete:
- =-fallow-single-precision=

The following option is documented twice, the other being in the
pre-processor.
- =-trigraphs=

The following options are documented, but not mentioned in the summary:
- =-fcilkplus=
- =-fgnu-tm=

*** C++ language options

The following option is documented twice, the other being in the
pre-processor.
- =-nostdinc++= (also in pre-processor)
- =-fms-extensions= (also in C language)

The following options are documented, but not mentioned in the summary:
- =-fabi-compat-version==
- =-fdeduce-init-list=
- =-fextern-tls-init=
- =-fno-lifetime-dse=
- =-fno-use-cxa-get-exception-ptr=
- =-print-objc-runtime-info=
- =-fstrict-enums=

The following is mentioned in passing in the documentation, but is not
otherwise documented:
- =-fno-default-inline=

The following option only appears in the index.
- =-fno-ext-numeric-literals= (positive is documented).

The following option is not documented, but appears to work:
- =-fgnu-keywords=

*** Objective-C and Objective-C++ options

The following options are not documented:
- =-objcmt-atomic-property=
- =-objcmt-migrate-all=
- =-objcmt-migrate-annotation=
- =-objcmt-migrate-designated-init=
- =-objcmt-migrate-instancetype=
- =-objcmt-migrate-literals=
- =-objcmt-migrate-ns-macros=
- =-objcmt-migrate-property-dot-syntax=
- =-objcmt-migrate-property=
- =-objcmt-migrate-protocol-conformance=
- =-objcmt-migrate-readonly-property=
- =-objcmt-migrate-readwrite-property=
- =-objcmt-migrate-subscripting=
- =-objcmt-ns-nonatomic-iosonly=
- =-objcmt-returns-innerpointer-property=

The following option only appears in the index.
- =-flocal-ivars=

*** Diagnostic message formating options

The =[= in the description of =-fdiagnostics-color= is misplaced.

The following option only appears in the index.
- =-fdiagnostics-show-caret (negative is listed)=

*** Warning options

There are a handful of language specific warnings in summary sections for the
language. They should be repatriated here.

GCC will silent accept any flag beginning =-Wno-=, even if the warning does
not exist (unlike Clang/LLVM).

The following option lists the default in the summary, rather than the option
that changes the default:
- =-Wplacement-new= is the default, so need =-Wno-placement-new= in summary.

The following options are documented, but do not appear in the summary:
- =-pedantic=
- =-Wformat-zero-length=
- =-Wlto-type-mismatch=
- =-Wno-terminate=
- =-Wno-varargs=
- =-Wno-virtual-move-assign=
- =-Woverride-init=
- =-Wprotocol=
- =-Wstrict-overflow==
- =-Wsynth=
- =-Wunreachable-code=

The following options appear in the index, but not in the documentation
- =-Wcomments= (synonym for =-Wcomment=)
- =-Wno-duplicated-cond= (positive is documented)
- =-Wno-frame-address= (positive is documented)
- =-Wno-invalid-memory-model= (positive is documented)
- =-Wno-lto-type-mistmach= (misspelling of =-Wno-lto-type-mismatch=, positive
  is documented)
- =-Wno-misleading-indentation= (positive is documented)
- =-Wno-null-dereference= (positive is documented)
- =-Wno-override-init-side-effects= (positive is documented)
- =-Wno-shift-negative-value= (positive is documented)
- =-Wno-shift-overflow= (positive is documented)
- =-Wno-strict-selector-match= (positive is documented)
- =-Wno-subobject-linkage= (positive is documented)
- =-Wno-tautological-compare= (positive is documented)
- =-Wterminate= (negative is documented)

The following options work, but are not documented:
- =-Wc++0x-compat=
- =-Wimport=
- =-Wmissing-noreturn= (deprecated, now an alias for =-Wsuggest-attribute=)
- =-Wunused-argument=

The following is misprinted in the index
- =-Wopenm-simd= (should be =-Wopenmp-simd=)

*** C and Objective-C only warnings

*** Debugging options

The following options are documented, but do not appear in the summary:
- =-fvar-tracking-assignments-toggle=
- =-ggdb<n>= (plain =-gdb= does appear).
- =-ggnu-pubnames=
- =-gpubnames=
- =-gsplit-dwarf=

The following options appear in the index, but not in the documentation
- =-fdwarf2-cfi-asm= (negative is documented).
- =-fmerge-debug-strings= (negative is documented).

The following options appear in the summary, even though they are the default
value of a toggle:
- =-grecord-gcc-switches=
- =-gno-strict-dwarf= (default on most targets)

*** Optimization options

The following options are documented, but do not appear in summary:
- =-fdeclone-ctor-dtor=
- =-flto== (Plain =-flto= is recorded)
- =-flto-odr-type-merging=
- =-foptimize-strlen=
- =-fsimd-cost-model==
- =-fstrict-enums=
- =-ftree-coalesce-inlined-vars=
- =-ftree-copyrename=
- =-ftree-slp-vectorize=
- =-ftree-vectorize=

The following parameters are documented, but do not appear to work:
- =--param tracer-min-branch-ratio-feedback==
- =--param reorder-blocks-duplicate==
- =--param reorder-blocks-duplicate-feedback==
- =--param sched-spec-state-edge-prob-cutoff==
- =--param selsched-max-insns-to-rename==
- =--param lto-minpartition==

The following options appear to be supported, but are undocumented:
- =-ftree-coalesce-inlined-vars=
- =-ftree-copyrename=

The following option is documented in the internals manual (so not an official
option), but appears in the option summary.
- =-fwpa=

*** Program instrumentation options

The following option is not documented:
- =-fcheck-data-deps=

(From the patch documentation, =-fcheck-data-deps= compares the results of
several data dependence analyzers, and probably belongs in this section.)

The following negative options are accepted, but not the equivalent positives.
- =-fno-sanitize-recover=leak=
- =-fno-sanitize-recover=thread=

The following option is documented, but does not appear in the summary:
= =-fsanitize-coverage=trace-pc= (negative is assumed to also be implented).

The following options appear in the index but not in the documentation
- =-fno-check-pointer-bounds= (positive is documented)
- =-fno-check-pointer-bounds= (positive is documented)
- =-fno-chkp-check-incomplete-type= (positive is documented)
- =-fno-chkp-check-read= (positive is documented)
- =-fno-chkp-check-write= (positive is documented)
- =-fno-chkp-first-field-has-own-bounds= (positive is documented)
- =-fno-chkp-instrument-calls= (positive is documented)
- =-fno-chkp-instrument-marked-only= (positive is documented)
- =-fno-chkp-narrow-bounds= (positive is documented)
- =-fno-chkp-narrow-to-innermost-array= (positive is documented)
- =-fno-chkp-optimize= (positive is documented)
- =-fno-chkp-store-bounds= (positive is documented)
- =-fno-chkp-treat-zero-dynamic-size-as-infinite= (positive is documented)
- =-fno-chkp-use-fast-string-functions= (positive is documented)
- =-fno-chkp-use-nochk-string-functions= (positive is documented)
- =-fno-chkp-use-static-bounds= (positive is documented)
- =-fno-chkp-use-static-const-bounds= (positive is documented)
- =-fno-chkp-use-wrappers= (positive is documented)

*** Preprocessor options

The following options are documented, but do not appear in the summary:
- =-iquote=
- =-fdirectives-only=
- =-fdollars-in-identifiers=
- =-fno-show-column=
- =-fexec-charset==
- =-fextended-identifiers=
- =-finput-charset==
- =-fpch-deps=
- =-fpch-preprocess=
- =-fpreprocessed=
- =-ftabstop==
- =-fwide-exec-charset=UTF-8=
- =-MD=
- =-MMD=

The following option appaers not to work:
- =-version= (i.e. with one hyphen)

The following options id documented twice, once in C, the other here.
- =-trigraphs=

*** Assembler options

It the summary, the title should be _Assembler Options_

*** Linker options

The following options are documented, but do not appear in the summary:
- =-no-pie=
- =-lobjc=

*** Directory options

*** Code Generation options

The following is mentioned in passing in the documentation, but is not
otherwise documented:
- =-fcommon= (=-fno-common= is documented)

The following is misprinted in the index
- =-fstack_reuse= (should be =-fstack-reuse=)

The following option is undocumented
- =--target=

*** Developer options

The following options appear in the summary only, but are otherwise
undocumented:
- =-fsel-sched-verbose=
- =-fsel-sched-dump-cfg=
- =-fsel-sched-pipelining-verbose=

The following options are documented, but do not appear in the summary.
- =-freport-bug=
- =-print-multiarch=

The following options appear in the index, but not in the documentation
- =-fno-checking= (positive is documented).

The following options are documented, but appear not to work.
- =-fdump-rtl-bypass=
- =-fdump-rtl-dce=
- =-fdump-rtl-dce1=
- =-fdump-rtl-dce2=
- =-fdump-rtl-eh=
- =-fdump-rtl-gcse1=
- =-fdump-rtl-initvals=
- =-fdump-rtl-regclass=
- =-fdump-rtl-seqabstr=
- =-fdump-rtl-sibling=
- =-fdump-rtl-subregs_of_mode_finish=
- =-fdump-rtl-subregs_of_mode_init=
- =-fdump-rtl-unshare=
- =-fdump-tree-storeccp=
- =-fdump-tree-store_copyprop=

** Plain bugs

=--target-help= barfs if gold is the linker.

* List of things to be done for LLVM

The following options should be marked as MIPS only:
- =-mfpxx=
- =-mno-odd-spreg= and =-modd-spreg=

The following options should be marked as ARM only
- =-mglobal-merge= and =-mno-global-merge=
- =-mlong-calls= and =-mno-long-calls=

The following options are listed by --help-hidden but not supported:
- =-fallow-single-precision=
- =-omptargets=i686-pc-linux-gnu=
- =-fno-objc-infer-related-result-type=
- =--verify-debug-info=

The following option is documented online, but not supported+
- =-fsanitize-trap=cfi-cast-strict= (-fno-sanitize=cfi-cast-strict is OK)

The following options are not supported, even though =vptr= is one of the
categories for the undefined sanitizer.
- =-fsanitize-trap=vptr= and =-fno-sanitize-trap=vptr=

    $ clang++ -fsanitize-trap=vptr -fsanitize=undefined dummy.cpp
    clang-3.9: error: unsupported argument 'vptr' to option '-fsanitize-trap'

** Plain bugs

=-include= expects a pre-compiled header file (i.e. identical behavior to
=-include-pch=)
